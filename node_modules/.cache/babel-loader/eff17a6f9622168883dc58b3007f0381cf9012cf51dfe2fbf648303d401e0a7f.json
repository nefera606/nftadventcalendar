{"ast":null,"code":"var _jsxFileName = \"/home/rox/Projects/advient-nft/src/MetamaskButton.js\",\n  _s = $RefreshSig$();\nimport { useMetaMask } from \"metamask-react\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MetamaskButton() {\n  _s();\n  const {\n    status,\n    connect,\n    account,\n    chainId,\n    ethereum\n  } = useMetaMask();\n  if (status === \"initializing\") return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Synchronisation with MetaMask ongoing...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 42\n  }, this);\n  if (status === \"unavailable\") return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"MetaMask not available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 41\n  }, this);\n  if (status === \"notConnected\") return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: connect,\n    variant: \"contained\",\n    children: \"Connect metamask\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 42\n  }, this);\n  if (status === \"connecting\") return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Connecting...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 40\n  }, this);\n  if (status === \"connected\") return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Connected account \", account, \" on chain ID \", chainId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 39\n  }, this);\n  return null;\n}\n_s(MetamaskButton, \"RHgSGYdMJb6eLCgtqViyGzVDHq4=\", false, function () {\n  return [useMetaMask];\n});\n_c = MetamaskButton;\nexport { MetamaskButton };\nvar _c;\n$RefreshReg$(_c, \"MetamaskButton\");","map":{"version":3,"names":["useMetaMask","React","Button","MetamaskButton","status","connect","account","chainId","ethereum"],"sources":["/home/rox/Projects/advient-nft/src/MetamaskButton.js"],"sourcesContent":["import { useMetaMask } from \"metamask-react\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\n\nfunction MetamaskButton() {\n\n  const { status, connect, account, chainId, ethereum } = useMetaMask();\n\n  if (status === \"initializing\") return (<div>Synchronisation with MetaMask ongoing...</div>)\n\n  if (status === \"unavailable\") return (<div>MetaMask not available</div>)\n\n  if (status === \"notConnected\") return (<Button onClick={connect} variant=\"contained\">Connect metamask</Button>)\n\n  if (status === \"connecting\") return (<div>Connecting...</div>)\n\n  if (status === \"connected\") return (<div>Connected account {account} on chain ID {chainId}</div>)\n\n  return null;\n}\n\nexport { MetamaskButton };"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAE1C,SAASC,cAAc,GAAG;EAAA;EAExB,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGR,WAAW,EAAE;EAErE,IAAII,MAAM,KAAK,cAAc,EAAE,oBAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAmD;EAE1F,IAAIA,MAAM,KAAK,aAAa,EAAE,oBAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiC;EAEvE,IAAIA,MAAM,KAAK,cAAc,EAAE,oBAAQ,QAAC,MAAM;IAAC,OAAO,EAAEC,OAAQ;IAAC,OAAO,EAAC,WAAW;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA0B;EAE9G,IAAID,MAAM,KAAK,YAAY,EAAE,oBAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAwB;EAE7D,IAAIA,MAAM,KAAK,WAAW,EAAE,oBAAQ;IAAA,iCAAwBE,OAAO,mBAAeC,OAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAAO;EAEhG,OAAO,IAAI;AACb;AAAC,GAfQJ,cAAc;EAAA,QAEmCH,WAAW;AAAA;AAAA,KAF5DG,cAAc;AAiBvB,SAASA,cAAc;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}